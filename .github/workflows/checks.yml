# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Checks

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  # NOTE: the value of `group` should be chosen carefully,
  # otherwise we might end up over- or under-canceling workflow runs
  # github.head_ref is only defined for pull request events
  # so, if it's not present (i.e. event was triggered by push)
  # we use github.ref instead
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

defaults:
  run:
    # important to make sure that all commands on Windows are run using Bash
    # -l: login shell, needed when using Conda
    shell: bash -l {0}

env:
  # --color=yes needed for colorized output to be shown in GHA logs
  # --pyargs watertap is needed to be able to define CLI options in watertap/conftest.py
  PYTEST_ADDOPTS: "--color=yes"
  PIP_PROGRESS_BAR: "off"

jobs:

  notebooks:
    name: Test notebooks (py${{ matrix.python-version }}/${{ matrix.os }}/${{ matrix.replica }})
    runs-on: ${{ matrix.os-version }}
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - '3.8'
        os:
          - linux
          # - win64
        replica: [
          "0", "1", "2", "3", "4", "5", "6", "7", "8", "9",
          "10", "11", "12", "13", "14", "15", "16", "17", "18", "19",
        ]
        include:
          - os: linux
            os-version: ubuntu-20.04
          # - os: win64
          #   os-version: windows-2019
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: watertap-dev
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        echo '::group::Output of "conda install" commands'
        conda install --quiet --yes pip setuptools wheel pandoc
        echo '::endgroup::'
        echo '::group::Output of "pip install" commands'
        pip install -r requirements-dev.txt
        echo '::endgroup::'
        echo '::group::Display installed packages'
        conda list
        pip list
        pip show idaes-pse
        echo '::endgroup::'
        echo '::group::Output of "idaes get-extensions" command'
        idaes get-extensions --verbose
        echo '::endgroup::'
    - name: Run pytest with nbmake
      run:
        pytest --nbmake --nbmake-timeout=600 tutorials/parameter_sweep_demo.ipynb
